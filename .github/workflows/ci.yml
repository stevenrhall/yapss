name: CI
'on':
  workflow_dispatch:
    inputs:
      job:
        description: Select job to run
        required: true
        default: all
        type: choice
        options:
          - all
          - test
          - test-conda
          - ubuntu-py310-only

jobs:
  test:
    if: ${{ github.event.inputs.job == 'all' || github.event.inputs.job == 'test' }}
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
        exclude:
          - os: windows-latest
            python-version: '3.10'
          - os: windows-latest
            python-version: '3.11'
          - os: windows-latest
            python-version: '3.12'
          - os: macos-latest
            python-version: '3.10'
          - os: macos-latest
            python-version: '3.11'
          - os: macos-latest
            python-version: '3.12'
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: 'Set up Python ${{ matrix.python-version }}'
        uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.python-version }}'
      - name: Install pandoc (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install pandoc
      - name: Install pandoc (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install pandoc
      - name: Install pandoc (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install pandoc
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Test with tox
        env:
          YAPSS_LOGGING: DEBUG
        run: tox

  ubuntu-py310-test:
    if: ${{ github.event.inputs.job == 'all' || github.event.inputs.job == 'ubuntu-py310-only' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 'Set up Python 3.10'
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install pandoc
        run: sudo apt install pandoc
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Run tests with tox
        env:
          YAPSS_LOGGING: DEBUG
        run: tox

  test-conda:
    if: ${{ github.event.inputs.job == 'all' || github.event.inputs.job == 'test-conda' }}
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - '3.9'
      fail-fast: false
    defaults:
      run:
        shell: 'bash -l {0}'
    steps:
      - name: Set up Conda
        uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: latest
          python-version: 3.9
          activate-environment: yapss-pytest
          auto-update-conda: true
          channels: conda-forge
      - name: Cache Conda Environment
        uses: actions/cache@v3
        with:
          path: /usr/share/miniconda/envs
          key: '${{ runner.os }}-conda-${{ hashFiles(''**/environment*.yml'') }}'
          restore-keys: |
            ${{ runner.os }}-conda-
      - name: Install test dependencies
        run: conda env update --file conda/environment-test.yml
      - name: Install the package
        run: python -m pip install --no-deps --no-build-isolation .
      - name: Test with pytest
        run: python -m pytest tests/examples/test_brachistochrone_minimal.py